from django.template import TemplateSyntaxError

class ForceResponseMiddleware:
    def process_exception(self, request, e):
        """Catch plugin-generated exception and react.
        Because django plugins cannot throw a raw response or use utils
        to redirect, the solution is to raise an exception, catch it with
        middleware and react accordingly.

        This middleware checks for ForceResponse exception and returns it's
        response object. If ForceResponse is raised in a CMS plugin we need
        to uwrap it from the TemplateSyntaxtError generated by Django CMS.
        Instance of TemplateSyntaxError has exc_info field where it has the
        original exception. exc_info[1] is the exception instance.
        """        
        if isinstance(e, TemplateSyntaxError) and getattr(e, 'exc_info', 0):
            try:
                e = e.exc_info[1]
            except:
                raise e
        if isinstance(e, ForceResponse):
            return e.response

class ForceResponse(Exception):
    def __init__(self, response):
        self.response = response

